name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  NX_THE_GRAPH_MV_GOERLI_URL: ${{ secrets.NX_THE_GRAPH_MV_GOERLI_URL }}

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        name: Setup node
        with:
          node-version: 16
          cache: "yarn"

      - run: yarn install --frozen-lockfile
        name: Install dependencies

      - run: yarn build
        name: Build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Firebase deploy
        id: deploy
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_7E17F }}"
          channelId: live
          projectId: frontend-7e17f

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "âœ¨ New version of mStable frontend ðŸš€ Deploy url: https://frontend-7e17f.web.app/"

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [pr]
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        name: Setup node
        with:
          node-version: 16
          cache: "yarn"

      - run: yarn install --frozen-lockfile
        name: Install dependencies

      - run: yarn build
        name: Build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Firebase deploy
        id: deploy
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_7E17F }}"
          projectId: frontend-7e17f

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          PR_NAME: ${{ github.head_ref }}
          DEPLOY_URL: ${{ steps.deploy.outputs.details_url }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "âœ¨ PR **{{ PR_NAME }}** created/updated ðŸš€ Deploy url: {{ DEPLOY_URL }}"
